"""empty message

Revision ID: b31015161a02
Revises: 
Create Date: 2025-04-22 10:27:20.064746

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b31015161a02'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('country_id'),
    sa.UniqueConstraint('country')
    )
    op.create_table('exercise_bank',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('type_of_exercise', sa.String(length=80), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('exercise_id')
    )
    op.create_table('medication',
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('medication_id')
    )
    op.create_table('report',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', name='reporttype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('city',
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=80), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ),
    sa.PrimaryKeyConstraint('city_id')
    )
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_city_country_id'), ['country_id'], unique=False)

    op.create_table('address',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address1', sa.String(length=128), nullable=False),
    sa.Column('address2', sa.String(length=128), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.String(length=128), nullable=False),
    sa.Column('zipcode', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_address_city_id'), ['city_id'], unique=False)

    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.Enum('Patient', 'Doctor', 'Pharmacy', 'SuperUser', name='accounttype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('doctor',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('specialization', sa.String(length=80), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=False),
    sa.Column('profile_picture', sa.String(length=120), nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('license_id', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('license_id')
    )
    op.create_table('doctor_audit',
    sa.Column('audit_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name_old', sa.String(length=80), nullable=False),
    sa.Column('first_name_new', sa.String(length=80), nullable=False),
    sa.Column('last_name_old', sa.String(length=80), nullable=False),
    sa.Column('last_name_new', sa.String(length=80), nullable=False),
    sa.Column('email_old', sa.String(length=120), nullable=False),
    sa.Column('email_new', sa.String(length=120), nullable=False),
    sa.Column('phone_old', sa.String(length=20), nullable=False),
    sa.Column('phone_new', sa.String(length=20), nullable=False),
    sa.Column('specialization_old', sa.String(length=80), nullable=False),
    sa.Column('specialization_new', sa.String(length=80), nullable=False),
    sa.Column('bio_old', sa.Text(), nullable=True),
    sa.Column('bio_new', sa.Text(), nullable=True),
    sa.Column('fee_old', sa.Float(), nullable=False),
    sa.Column('fee_new', sa.Float(), nullable=False),
    sa.Column('profile_picture_old', sa.String(length=120), nullable=True),
    sa.Column('profile_picture_new', sa.String(length=120), nullable=True),
    sa.Column('dob_old', sa.Date(), nullable=False),
    sa.Column('dob_new', sa.Date(), nullable=False),
    sa.Column('license_id_old', sa.String(length=80), nullable=False),
    sa.Column('license_id_new', sa.String(length=80), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='action'), nullable=False),
    sa.Column('audit_timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('audit_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['audit_user'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('audit_id'),
    sa.UniqueConstraint('email_new'),
    sa.UniqueConstraint('email_old'),
    sa.UniqueConstraint('license_id_new'),
    sa.UniqueConstraint('license_id_old')
    )
    op.create_table('notification',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('pharmacy',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_name', sa.String(length=80), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hours', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('post',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('super_user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_audit',
    sa.Column('audit_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username_old', sa.String(length=80), nullable=False),
    sa.Column('username_new', sa.String(length=80), nullable=False),
    sa.Column('password_old', sa.String(length=255), nullable=False),
    sa.Column('password_new', sa.String(length=255), nullable=False),
    sa.Column('account_type_old', sa.Enum('Patient', 'Doctor', 'Pharmacy', 'SuperUser', name='accounttype'), nullable=False),
    sa.Column('account_type_new', sa.Enum('Patient', 'Doctor', 'Pharmacy', 'SuperUser', name='accounttype'), nullable=False),
    sa.Column('created_at_old', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at_new', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at_old', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at_new', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='action'), nullable=False),
    sa.Column('audit_timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('audit_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['audit_user'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('audit_id')
    )
    op.create_table('comment',
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.post_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('inventory',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['medication_id'], ['medication.medication_id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.user_id'], ),
    sa.PrimaryKeyConstraint('inventory_id')
    )
    op.create_table('patient',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=False),
    sa.Column('last_name', sa.String(length=80), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('pharmacy_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('patient_audit',
    sa.Column('audit_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name_old', sa.String(length=80), nullable=False),
    sa.Column('first_name_new', sa.String(length=80), nullable=False),
    sa.Column('last_name_old', sa.String(length=80), nullable=False),
    sa.Column('last_name_new', sa.String(length=80), nullable=False),
    sa.Column('email_old', sa.String(length=120), nullable=False),
    sa.Column('email_new', sa.String(length=120), nullable=False),
    sa.Column('phone_old', sa.String(length=20), nullable=False),
    sa.Column('phone_new', sa.String(length=20), nullable=False),
    sa.Column('dob_old', sa.Date(), nullable=False),
    sa.Column('dob_new', sa.Date(), nullable=False),
    sa.Column('doctor_id_old', sa.Integer(), nullable=False),
    sa.Column('doctor_id_new', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id_old', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id_new', sa.Integer(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='action'), nullable=False),
    sa.Column('audit_timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('audit_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['audit_user'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['doctor_id_new'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['doctor_id_old'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id_new'], ['pharmacy.user_id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id_old'], ['pharmacy.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('audit_id'),
    sa.UniqueConstraint('email_new'),
    sa.UniqueConstraint('email_old')
    )
    op.create_table('appointment',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('appointment_id')
    )
    op.create_table('invoice',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PAID', 'PENDING', name='paymentstatus'), nullable=False),
    sa.Column('pay_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ),
    sa.PrimaryKeyConstraint('invoice_id')
    )
    op.create_table('medical_record',
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ),
    sa.PrimaryKeyConstraint('medical_record_id')
    )
    op.create_table('patient_exercise',
    sa.Column('patient_exercise_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('reps', sa.String(length=30), nullable=False),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'COMPLETED', name='exercisestatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise_bank.exercise_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('patient_exercise_id')
    )
    op.create_table('patient_report',
    sa.Column('patient_report_id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('calories_intake', sa.Integer(), nullable=True),
    sa.Column('hours_of_exercise', sa.Integer(), nullable=True),
    sa.Column('hours_of_sleep', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['report_id'], ['report.report_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('patient_report_id')
    )
    op.create_table('prescription',
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PAID', 'UNPAID', name='prescriptionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.user_id'], ),
    sa.PrimaryKeyConstraint('prescription_id')
    )
    op.create_table('rating_survey',
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('stars', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.user_id'], ),
    sa.PrimaryKeyConstraint('survey_id')
    )
    op.create_table('appointment_audit',
    sa.Column('audit_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('patient_id_old', sa.Integer(), nullable=False),
    sa.Column('patient_id_new', sa.Integer(), nullable=False),
    sa.Column('doctor_id_old', sa.Integer(), nullable=False),
    sa.Column('doctor_id_new', sa.Integer(), nullable=False),
    sa.Column('created_at_old', sa.DateTime(), nullable=False),
    sa.Column('created_at_new', sa.DateTime(), nullable=False),
    sa.Column('updated_at_old', sa.DateTime(), nullable=False),
    sa.Column('updated_at_new', sa.DateTime(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='action'), nullable=False),
    sa.Column('audit_timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('audit_user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointment.appointment_id'], ),
    sa.ForeignKeyConstraint(['audit_user'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['doctor_id_new'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['doctor_id_old'], ['doctor.user_id'], ),
    sa.ForeignKeyConstraint(['patient_id_new'], ['patient.user_id'], ),
    sa.ForeignKeyConstraint(['patient_id_old'], ['patient.user_id'], ),
    sa.PrimaryKeyConstraint('audit_id')
    )
    op.create_table('appointment_detail',
    sa.Column('appointment_details_id', sa.Integer(), nullable=False),
    sa.Column('treatment', sa.String(length=255), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='appointmentstatus'), nullable=False),
    sa.ForeignKeyConstraint(['appointment_details_id'], ['appointment.appointment_id'], ),
    sa.PrimaryKeyConstraint('appointment_details_id')
    )
    op.create_table('chat',
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointment.appointment_id'], ),
    sa.PrimaryKeyConstraint('chat_id')
    )
    op.create_table('prescription_medication',
    sa.Column('prescription_medication_id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('medication_id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.String(length=100), nullable=False),
    sa.Column('medical_instructions', sa.Text(), nullable=False),
    sa.Column('taken_date', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medication_id'], ['medication.medication_id'], ),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescription.prescription_id'], ),
    sa.PrimaryKeyConstraint('prescription_medication_id')
    )
    op.create_table('message',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message_content', sa.Text(), nullable=False),
    sa.Column('time', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.chat_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('message')
    op.drop_table('prescription_medication')
    op.drop_table('chat')
    op.drop_table('appointment_detail')
    op.drop_table('appointment_audit')
    op.drop_table('rating_survey')
    op.drop_table('prescription')
    op.drop_table('patient_report')
    op.drop_table('patient_exercise')
    op.drop_table('medical_record')
    op.drop_table('invoice')
    op.drop_table('appointment')
    op.drop_table('patient_audit')
    op.drop_table('patient')
    op.drop_table('inventory')
    op.drop_table('comment')
    op.drop_table('user_audit')
    op.drop_table('super_user')
    op.drop_table('post')
    op.drop_table('pharmacy')
    op.drop_table('notification')
    op.drop_table('doctor_audit')
    op.drop_table('doctor')
    op.drop_table('user')
    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_address_city_id'))

    op.drop_table('address')
    with op.batch_alter_table('city', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_city_country_id'))

    op.drop_table('city')
    op.drop_table('report')
    op.drop_table('medication')
    op.drop_table('exercise_bank')
    op.drop_table('country')
    # ### end Alembic commands ###
