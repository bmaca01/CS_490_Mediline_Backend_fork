get_medical_records
---
tags:
  - medical_record
parameters:
  - name: user_id
    in: path
    type: integer
    required: true
    description: User ID
  - name: sort_by
    in: query
    type: string
    enum:
      - medical_record_id
      - created_at
    required: false
    description: set column to sort by
  - name: order_by
    in: query
    type: string
    enum:
      - asc
      - desc
    required: false
    description: set ascending or descending order
responses:
  200:
    description: fetch list of medical records for a user
    schema:
      type: array
      items:
        type: object
        properties:
          medical_record_id:
            type: integer
          doctor_id:
            type: integer
          created_at:
            type: string
            format: date-time
          description:
            type: string
          appointment:
            type: JSON
            description: JSON object containing appointment details
            properties:
              appointment_id:
                type: integer
              doctor_id:
                type: integer
              patient_id:
                type: integer
              doctor_name:
                type: string
              patient_name:
                type: string
    examples:
      application/json:
        [
          {
            "medical_record_id": 1,
            "doctor_id": 1,
            "created_at": "2023-10-01T12:00:00Z",
            "description": "Routine check-up",
            "appointment":
              {
                "appointment_id": 1,
                "doctor_id": 1,
                "patient_id": 1,
                "doctor_name": "Dr. Smith",
                "patient_name": "John Doe",
              },
          },
          {
            "medical_record_id": 2,
            "doctor_id": 2,
            "created_at": "2023-10-02T14:30:00Z",
            "description": "Follow-up visit",
            "appointment":
              {
                "appointment_id": 2,
                "doctor_id": 2,
                "patient_id": 1,
                "doctor_name": "Dr. Jones",
                "patient_name": "John Doe",
              },
          },
        ]
  400:
    description: invalid sort field
    schema:
      type: object
      properties:
        error:
          type: string
    examples:
      application/json: { "error": "Invalid sort field: <sort_by arg>" }
  404:
    description: user not found
    schema:
      type: object
      properties:
        error:
          type: string
    examples:
      application/json: { "error": "User not found" }
  500:
    description: internal server error
    schema:
      type: object
      properties:
        error:
          type: string
    examples:
      application/json: { "error": "Internal server error" }
